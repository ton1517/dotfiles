[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
au MyAutoCmd VimEnter * nested colorscheme molokai
au MyAutoCmd VimEnter * nested highlight Normal ctermbg=none
au MyAutoCmd VimEnter * nested highlight Comment ctermfg=246
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/rc/plugins/lightline.rc.vim'

[[plugins]]
repo = 'sgur/vim-lazygutter'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
nmap <silent> <Leader>r <Plug>(quickrun)

let g:quickrun_config = {
\    "_" : {
" \       'runner' : 'vimproc'
\    },
\   "markdown" : {
\       'outputter/buffer/close_on_empty' : 1,
\       'command' : 'open',
\       'cmdopt'  : '-a',
\       'args'    : 'Marked',
\       'exec'    : '%c %o %a %s',
\    },
\   "watchdogs_checker/_" : {
\       "runner/vimproc/updatetime" : 50,
\   },
\}
'''

[[plugins]]
repo = "jceb/vim-hier"

[[plugins]]
repo = "osyo-manga/shabadou.vim"

[[plugins]]
repo = "dannyob/quickfixstatus"

[[plugins]]
repo = "osyo-manga/vim-watchdogs"
depends = [
    'vim-hier',
    'quickfixstatus',
    'shabadou.vim',
    'vim-quickrun'
]
hook_add = '''
let g:watchdogs_check_BufWritePost_enable = 1
let g:watchdogs_check_CursorHold_enable = 1

if executable('eslint')
    let g:quickrun_config['javascript/watchdogs_checker'] = {
    \   'type' : 'watchdogs_checker/eslint',
    \ }
    let g:quickrun_config['vue.html.javascript.css/watchdogs_checker'] = {
    \   'type' : 'watchdogs_checker/eslint',
    \ }
endif
'''
hook_post_source = '''
call watchdogs#setup(g:quickrun_config)
'''

[[plugins]]
repo = 'soramugi/auto-ctags.vim'
on_ft = ["php", "c", "cpp", "python", "javascript"]
depends = 'unite.vim'
hook_source = '''
let project_root = unite#util#path2project_directory(getcwd())
let g:auto_ctags = 1
let g:auto_ctags_directory_list = [project_root.'/.git', project_root.'/.svn']
let g:auto_ctags_tags_args = '--tag-relative --append=yes --recurse=yes --sort=yes --links=no'
let g:auto_ctags_filetype_mode = 1
'''

[[plugins]]
repo = 'LeafCage/yankround.vim'
on_map = [['nxo', '<Plug>']]
hook_add = '''
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
'''
hook_source = '''
let g:yankround_dir = "~/.vim/.backup/yankround"
let g:yankround_use_region_hl = 1
let g:yankround_max_history = 100
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
hook_source = '''
imap <C-j> <plug>(neosnippet_expand_or_jump)
smap <C-j> <plug>(neosnippet_expand_or_jump)
xmap <C-j> <Plug>(neosnippet_expand_target)

imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

let g:neosnippet#snippets_directory= '~/.vim/snippets'

if has('conceal')
    set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
hook_add = '''
nnoremap <silent> ,vf :VimFilerExplorer<CR>
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_enable_auto_cd = 1
let g:vimfiler_ignore_pattern = "\%(^\..*\|\.pyc$\)"
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
" for json
let g:vim_json_syntax_conceal = 0
" for javascript
let g:jsx_ext_required = 1
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

