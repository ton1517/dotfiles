[core]
    excludesfile = ~/.gitignore.global
    editor = vim
    ui = auto
    autocrlf = input
    pager = diff-so-fancy | less --tabs=4 -RFX
[include]
    path = ~/.gitconfig.local
[color]
    ui = true
[push]
    default = current
[alias]
    co = checkout
    st = status
    cm = commit --verbose
    tags = tag -l
    br = branch
    df = diff
    dfs = diff --staged
    diff-branch = diff --stat -p develop...HEAD
    ls = ls-files -v
    stage = add
    unstage = reset HEAD
    # ignoreファイルを表示
    ignored-list = ls-files --others -i --exclude-standard
    #コミットメッセージを変えずにamend
    amend = commit --amend --no-edit
    #すでに削除されているファイルを全てgit rmする 
    rmall = !git rm $(git ls-files -d)
    #gitの管理下にあるファイルを無視する
    skip = update-index --skip-worktree
    #skipされているファイルを表示
    skipped-list = !git ls-files -v . | grep '^S' | awk '{ print $2}'
    #もとに戻す
    noskip = update-index --no-skip-worktree
    alias = !git config --get-regexp alias |  sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\ = \\2/'
    lg = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
    su = submodule update
    delete-merged-branches = !git branch --merged | grep -vE '^\\*|master$|develop$' | xargs -I {} git branch -d {}
    rebase-develop= !git checkout develop && git pull --ff-only && git checkout - && git rebase develop
[diff]
    tool = vimdiff
    indentHeuristic = true
    colorMoved=plain
[difftool]
    prompt = false
[mergetool]
    keepBackup = false
[interactive]
    diffFilter = diff-highlight
[diff-so-fancy]
    stripLeadingSymbols = false
[color "diff"]
    oldMoved = 225 bold
    newMoved = 195 bold
[commit]
	verbose = true
[pull]
	ff = only
